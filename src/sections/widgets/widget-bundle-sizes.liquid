<script>
  var sizes = {};

  sizes = {{ section.settings | json }};

  sizes.products = [];
  {% for block in section.blocks %}
    {% assign parent = all_products[block.settings['product']] %}
    {% assign bundle_groups = '' %}
    {% for tag in parent.tags %}
      {% if tag contains 'bundle_group_' and tag contains '_qty' %}
        {% assign qty_array = tag | split: '::' %}
        {% assign key_array = qty_array | first | split: '_' %}
        {% capture key -%}bundle_group_{{- key_array[2] -}}_id{%- endcapture %}
        {% assign ids = '' %}
        {% for tag in parent.tags %}
          {% if tag contains key %}
            {% assign id = tag | split: '::' | last %}
            {% assign ids = ids | append: ',' | append: id %}
          {% endif %}
        {% endfor %}
        {% assign qty_array_last = qty_array | last %}
        {% assign bundle_groups = bundle_groups | append: '||' | append: qty_array_last | append: '|' | append: ids %}
      {% endif %}
    {% endfor %}
    {% capture bundle %}
      [
        {%- assign bundle_groups_array = bundle_groups | remove_first: '||' | split: '||' -%}
        {%- for group in bundle_groups_array -%}
          {%- assign group_array = group | split: '|' -%}
          {%- assign qty = group_array | first -%}
          {%- assign ids = group_array | last | remove_first: ',' | split: ',' -%}
          {
            "qty": {{- qty -}},
            "ids": {{- ids | json -}}
          }{%- unless forloop.last -%},{%- endunless -%}
        {%- endfor -%}
      ]
    {% endcapture %}
    {% assign price = parent.variants[0].price | money_without_currency %}
    {% assign sub_price = parent.variants[0].metafields.subscriptions.discount_variant_price | times: 100 | money_without_currency %}
    var subscription_map = {{ parent.metafields.subscriptions.original_to_hidden_variant_map | json }};
    sizes.products.push({
      id: {{ parent.variants[0].id }},
      subscription_variant_id: subscription_map["{{ parent.variants[0].id }}"].discount_variant_id,
      subscription_id: {{ parent.metafields.subscriptions.subscription_id }},
      subscription_frequencies: [{{ parent.metafields.subscriptions.shipping_interval_frequency }}],
      subscription_unit: "{{ parent.metafields.subscriptions.shipping_interval_unit_type }}",
      size: {{ block.settings['size'] }},
      selected: {{ block.settings['selected'] }},
      title: "{{ block.settings['title'] }}",
      price: {{ price }},
      sub_price: {{ sub_price }},
      bundle: {{ bundle }},
      hash: "{{ bundle | strip_newlines | remove: ' ' | hmac_sha256: shop.metafields.bundle.key }}"
    });
  {% endfor %}

  window.Scoutside.bundle.sizes = sizes;
</script>

{% schema %}
  {
    "name": "Build a Box - Sizes",
    "settings": [
      {
        "type": "text",
        "id": "title",
        "label": "Title",
        "default": "Select a Box Size"
      },
      {
        "type": "textarea",
        "id": "description",
        "label": "Description",
        "info": "Optional"
      },
      {
        "type": "image_picker",
        "id": "background",
        "label": "Background Image"
      }
    ],
    "blocks": [
      {
        "type": "parent",
        "name": "Parent Product",
        "settings": [
          {
            "type": "product",
            "id": "product",
            "label": "Parent Product",
            "info": "Pick products designed to be bundle parents."
          },
          {
            "type": "text",
            "id": "size",
            "label": "Size",
            "info": "Number only. Quantity size of the bundle."
          },
          {
            "type": "text",
            "id": "title",
            "label": "Title"
          },
          {
            "type": "checkbox",
            "id": "selected",
            "label": "Default selected?",
            "default": false
          }
        ]
      }
    ]
  }
{% endschema %}